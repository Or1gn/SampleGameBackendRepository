// <auto-generated />
using System;
using Core.DatabaseHandler;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Core.Migrations
{
    [DbContext(typeof(CoreDbContext))]
    [Migration("20240728175909_initialUpdatev5")]
    partial class initialUpdatev5
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Core.Interfaces.Enemy", b =>
                {
                    b.Property<Guid>("EnemyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<long>("Armor")
                        .HasColumnType("bigint")
                        .HasColumnName("armor");

                    b.Property<long>("Damage")
                        .HasColumnType("bigint")
                        .HasColumnName("damage");

                    b.Property<long>("Health")
                        .HasColumnType("bigint")
                        .HasColumnName("health");

                    b.Property<int>("Reward")
                        .HasColumnType("integer")
                        .HasColumnName("reward");

                    b.HasKey("EnemyId");

                    b.ToTable("enemies");
                });

            modelBuilder.Entity("Core.Interfaces.InventoryItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<long>("Count")
                        .HasColumnType("bigint")
                        .HasColumnName("count");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<Guid>("ItemId")
                        .HasColumnType("uuid")
                        .HasColumnName("itemid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<Guid>("PlayerId")
                        .HasColumnType("uuid")
                        .HasColumnName("playerid");

                    b.HasKey("Id");

                    b.HasIndex("PlayerId");

                    b.ToTable("inventoryitem");
                });

            modelBuilder.Entity("Core.Interfaces.PlayerInfo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<long>("Armor")
                        .HasColumnType("bigint")
                        .HasColumnName("armor");

                    b.Property<long>("Damage")
                        .HasColumnType("bigint")
                        .HasColumnName("damage");

                    b.Property<int>("Gold")
                        .HasColumnType("integer")
                        .HasColumnName("gold");

                    b.Property<long>("Health")
                        .HasColumnType("bigint")
                        .HasColumnName("health");

                    b.Property<long>("PlayerLevel")
                        .HasColumnType("bigint")
                        .HasColumnName("level");

                    b.Property<string>("PlayerName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid")
                        .HasColumnName("userid");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("player");
                });

            modelBuilder.Entity("Core.Interfaces.StoreItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<int>("Price")
                        .HasColumnType("integer")
                        .HasColumnName("price");

                    b.HasKey("Id");

                    b.ToTable("storeitem");
                });

            modelBuilder.Entity("Core.Interfaces.User", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("password");

                    b.HasKey("id");

                    b.ToTable("user");
                });

            modelBuilder.Entity("Core.Interfaces.InventoryItem", b =>
                {
                    b.HasOne("Core.Interfaces.PlayerInfo", "Player")
                        .WithMany("InventoryItems")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Player");
                });

            modelBuilder.Entity("Core.Interfaces.PlayerInfo", b =>
                {
                    b.HasOne("Core.Interfaces.User", "User")
                        .WithMany("Players")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Core.Interfaces.PlayerInfo", b =>
                {
                    b.Navigation("InventoryItems");
                });

            modelBuilder.Entity("Core.Interfaces.User", b =>
                {
                    b.Navigation("Players");
                });
#pragma warning restore 612, 618
        }
    }
}
